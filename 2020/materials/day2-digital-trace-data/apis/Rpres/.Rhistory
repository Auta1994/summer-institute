ggplot(data_to_plot, aes(x = time)) +
geom_ribbon(aes(ymin = 0, ymax = tweets_requested),
fill = "violetred2") +
geom_line(y = all_locations) +
geom_ribbon(aes(x = time, ymin = 0, ymax = tweets_collected),
fill = "chartreuse3") +
geom_line(y = tweets_collected) +
xlab("Time (in minutes)") +
ylab("Number of Tweets (in thousands)") +
annotate("text", x = 15, y = 3, label = "# of Tweets Collected", size = 4) +
annotate("text", x = 15, y = 11, label = "# of Tweets Requested", size = 4) +
annotate("segment", x = 10, xend = 10, y = 0, yend = 20,
linetype = "dashed") +
annotate("text", x = 10, y = 21, label = "Rate limiting", size = 4) +
theme_classic()
time <- c(3, 6, 9, 12, 15, 18)
tweets_collected <- c(0, 7, 11, 4, 6, 8)
tweets_requested <- c(0, 7, 11, 12, 13, 14)
data_to_plot <- tibble(time, tweets_collected, tweets_requested)
ggplot(data_to_plot, aes(x = time)) +
geom_ribbon(aes(ymin = 0, ymax = tweets_requested),
fill = "violetred2") +
geom_line(y = all_locations) +
geom_ribbon(aes(x = time, ymin = 0, ymax = tweets_collected),
fill = "chartreuse3") +
geom_line(y = tweets_collected) +
xlab("Time (in minutes)") +
ylab("Number of Tweets (in thousands)") +
annotate("text", x = 15, y = 3, label = "# of Tweets Collected", size = 4) +
annotate("text", x = 15, y = 11, label = "# of Tweets Requested", size = 4) +
annotate("segment", x = 10, xend = 10, y = 0, yend = 20,
linetype = "dashed") +
annotate("text", x = 10, y = 21, label = "Rate limiting", size = 4) +
theme_classic()
time <- c(3, 6, 9, 12, 15, 18)
tweets_collected <- c(0, 7, 10, 0, 0, 0)
tweets_requested <- c(0, 7, 11, 12, 13, 14)
data_to_plot <- tibble(time, tweets_collected, tweets_requested)
ggplot(data_to_plot, aes(x = time)) +
geom_ribbon(aes(ymin = 0, ymax = tweets_requested),
fill = "violetred2") +
geom_line(y = all_locations) +
geom_ribbon(aes(x = time, ymin = 0, ymax = tweets_collected),
fill = "chartreuse3") +
geom_line(y = tweets_collected) +
xlab("Time (in minutes)") +
ylab("Number of Tweets (in thousands)") +
annotate("text", x = 15, y = 3, label = "# of Tweets Collected", size = 4) +
annotate("text", x = 15, y = 11, label = "# of Tweets Requested", size = 4) +
annotate("segment", x = 10, xend = 10, y = 0, yend = 20,
linetype = "dashed") +
annotate("text", x = 10, y = 21, label = "Rate limiting", size = 4) +
theme_classic()
time <- c(3, 6, 9, 12, 15, 18)
tweets_collected <- c(0, 7, 10, 0, 0, 0)
tweets_requested <- c(0, 7, 11, 16, 24, 32)
data_to_plot <- tibble(time, tweets_collected, tweets_requested)
ggplot(data_to_plot, aes(x = time)) +
geom_ribbon(aes(ymin = 0, ymax = tweets_requested),
fill = "violetred2") +
geom_line(y = all_locations) +
geom_ribbon(aes(x = time, ymin = 0, ymax = tweets_collected),
fill = "chartreuse3") +
geom_line(y = tweets_collected) +
xlab("Time (in minutes)") +
ylab("Number of Tweets (in thousands)") +
annotate("text", x = 15, y = 3, label = "# of Tweets Collected", size = 4) +
annotate("text", x = 15, y = 11, label = "# of Tweets Requested", size = 4) +
annotate("segment", x = 10, xend = 10, y = 0, yend = 20,
linetype = "dashed") +
annotate("text", x = 10, y = 21, label = "Rate limiting", size = 4) +
theme_classic()
data_to_plot <- tibble(time, tweets_collected, tweets_requested)
ggplot(data_to_plot, aes(x = time)) +
geom_ribbon(aes(ymin = 0, ymax = tweets_requested),
fill = "violetred2") +
geom_line(y = all_locations) +
geom_ribbon(aes(x = time, ymin = 0, ymax = tweets_collected),
fill = "chartreuse3") +
geom_line(y = tweets_collected) +
xlab("Time (in minutes)") +
ylab("Number of Tweets (in thousands)") +
annotate("text", x = 15, y = 3, label = "# of Tweets Collected", size = 4) +
annotate("text", x = 15, y = 11, label = "# of Tweets Requested", size = 4) +
annotate("segment", x = 10, xend = 10, y = 0, yend = 20,
linetype = "dashed") +
annotate("text", x = 10, y = 21, label = "Rate limiting", size = 4) +
theme_classic()
library(tidyverse)
time <- c(3, 6, 9, 12, 15, 18)
tweets_collected <- c(0, 7, 10, 0, 0, 0)
tweets_requested <- c(0, 7, 11, 12, 13, 14)
data_to_plot <- tibble(time, tweets_collected, tweets_requested)
ggplot(data_to_plot, aes(x = time)) +
geom_ribbon(aes(ymin = 0, ymax = tweets_requested),
fill = "violetred2") +
geom_line(y = all_locations) +
geom_ribbon(aes(x = time, ymin = 0, ymax = tweets_collected),
fill = "chartreuse3") +
geom_line(y = tweets_collected) +
xlab("Time (in minutes)") +
ylab("Number of Tweets (in thousands)") +
annotate("text", x = 15, y = 3, label = "# of Tweets Collected", size = 4) +
annotate("text", x = 15, y = 11, label = "# of Tweets Requested", size = 4) +
annotate("segment", x = 10, xend = 10, y = 0, yend = 20,
linetype = "dashed") +
annotate("text", x = 10, y = 21, label = "Rate limiting", size = 4) +
theme_classic()
time <- c(3, 6, 9, 12, 15, 18)
tweets_collected <- c(0, 7, 0, 0, 0, 0)
tweets_requested <- c(0, 7, 11, 12, 13, 14)
data_to_plot <- tibble(time, tweets_collected, tweets_requested)
ggplot(data_to_plot, aes(x = time)) +
geom_ribbon(aes(ymin = 0, ymax = tweets_requested),
fill = "violetred2") +
geom_line(y = all_locations) +
geom_ribbon(aes(x = time, ymin = 0, ymax = tweets_collected),
fill = "chartreuse3") +
geom_line(y = tweets_collected) +
xlab("Time (in minutes)") +
ylab("Number of Tweets (in thousands)") +
annotate("text", x = 15, y = 3, label = "# of Tweets Collected", size = 4) +
annotate("text", x = 15, y = 11, label = "# of Tweets Requested", size = 4) +
annotate("segment", x = 10, xend = 10, y = 0, yend = 20,
linetype = "dashed") +
annotate("text", x = 10, y = 21, label = "Rate limiting", size = 4) +
theme_classic()
time <- c(3, 6, 9, 12, 15, 18)
tweets_collected <- c(0, 7, 10, 0, 0, 0)
tweets_requested <- c(0, 7, 11, 12, 13, 14)
data_to_plot <- tibble(time, tweets_collected, tweets_requested)
ggplot(data_to_plot, aes(x = time)) +
geom_ribbon(aes(ymin = 0, ymax = tweets_requested),
fill = "violetred2") +
geom_line(y = all_locations) +
geom_ribbon(aes(x = time, ymin = 0, ymax = tweets_collected),
fill = "chartreuse3") +
geom_line(y = tweets_collected) +
xlab("Time (in minutes)") +
ylab("Number of Tweets (in thousands)") +
annotate("text", x = 15, y = 3, label = "# of Tweets Collected", size = 4) +
annotate("text", x = 15, y = 11, label = "# of Tweets Requested", size = 4) +
annotate("segment", x = 10, xend = 10, y = 0, yend = 20,
linetype = "dashed") +
annotate("text", x = 10, y = 21, label = "Rate limiting", size = 4) +
theme_classic()
ggplot(data_to_plot, aes(x = time)) +
geom_ribbon(aes(ymin = 0, ymax = tweets_requested),
fill = "violetred2") +
geom_line(y = all_locations) +
geom_ribbon(aes(x = time, ymin = 0, ymax = tweets_collected),
fill = "chartreuse3") +
geom_line(y = tweets_collected) +
xlab("Time (in minutes)") +
ylab("Number of Tweets (in thousands)") +
annotate("text", x = 15, y = 3, label = "# of Tweets Collected", size = 4) +
annotate("text", x = 15, y = 11, label = "# of Tweets Requested", size = 4) +
annotate("segment", x = 10, xend = 10, y = 0, yend = 20,
linetype = "dashed") +
annotate("text", x = 8, y = 21, label = "Rate limiting", size = 4) +
theme_classic()
ggplot(data_to_plot, aes(x = time)) +
geom_ribbon(aes(ymin = 0, ymax = tweets_requested),
fill = "violetred2") +
geom_line(y = all_locations) +
geom_ribbon(aes(x = time, ymin = 0, ymax = tweets_collected),
fill = "chartreuse3") +
geom_line(y = tweets_collected) +
xlab("Time (in minutes)") +
ylab("Number of Tweets (in thousands)") +
annotate("text", x = 15, y = 3, label = "# of Tweets Collected", size = 4) +
annotate("text", x = 15, y = 11, label = "# of Tweets Requested", size = 4) +
annotate("segment", x = 8, xend = 8, y = 0, yend = 20,
linetype = "dashed") +
annotate("text", x = 8, y = 21, label = "Rate limiting", size = 4) +
theme_classic()
ggplot(data_to_plot, aes(x = time)) +
geom_ribbon(aes(ymin = 0, ymax = tweets_requested),
fill = "violetred2") +
geom_line(y = all_locations) +
geom_ribbon(aes(x = time, ymin = 0, ymax = tweets_collected),
fill = "chartreuse3") +
geom_line(y = tweets_collected) +
xlab("Time (in minutes)") +
ylab("Number of Tweets (in thousands)") +
annotate("text", x = 15, y = 3, label = "# of Tweets Collected", size = 4) +
annotate("text", x = 15, y = 11, label = "# of Tweets Requested", size = 4) +
annotate("segment", x = 9, xend = 9, y = 0, yend = 20,
linetype = "dashed") +
annotate("text", x = 9, y = 21, label = "Rate limiting", size = 4) +
theme_classic()
ggplot(data_to_plot, aes(x = time)) +
geom_ribbon(aes(ymin = 0, ymax = tweets_requested),
fill = "violetred2") +
geom_line(y = all_locations) +
geom_ribbon(aes(x = time, ymin = 0, ymax = tweets_collected),
fill = "chartreuse3") +
geom_line(y = tweets_collected) +
xlab("Time (in minutes)") +
ylab("Number of Tweets (in thousands)") +
annotate("text", x = 15, y = 3, label = "# of Tweets Collected", size = 4) +
annotate("text", x = 15, y = 11, label = "# of Tweets Requested", size = 4) +
annotate("segment", x = 12, xend = 12, y = 0, yend = 20,
linetype = "dashed") +
annotate("text", x = 12, y = 21, label = "Rate limiting", size = 4) +
theme_classic()
ggplot(data_to_plot, aes(x = time)) +
geom_ribbon(aes(ymin = 0, ymax = tweets_requested),
fill = "violetred2") +
geom_line(y = tweets_requested) +
geom_ribbon(aes(x = time, ymin = 0, ymax = tweets_collected),
fill = "chartreuse3") +
geom_line(y = tweets_collected) +
xlab("Time (in minutes)") +
ylab("Number of Tweets (in thousands)") +
annotate("text", x = 15, y = 3, label = "# of Tweets Collected", size = 4) +
annotate("text", x = 15, y = 11, label = "# of Tweets Requested", size = 4) +
annotate("segment", x = 12, xend = 12, y = 0, yend = 20,
linetype = "dashed") +
annotate("text", x = 12, y = 21, label = "Rate limiting", size = 4) +
theme_classic()
time <- c(3, 6, 9, 12, 15, 18)
tweets_collected <- c(0, 7, 10, 0, 0, 0)
tweets_requested <- c(0, 7, 11, 14, 18, 23)
data_to_plot <- tibble(time, tweets_collected, tweets_requested)
ggplot(data_to_plot, aes(x = time)) +
geom_ribbon(aes(ymin = 0, ymax = tweets_requested),
fill = "violetred2") +
geom_line(y = tweets_requested) +
geom_ribbon(aes(x = time, ymin = 0, ymax = tweets_collected),
fill = "chartreuse3") +
geom_line(y = tweets_collected) +
xlab("Time (in minutes)") +
ylab("Number of Tweets (in thousands)") +
annotate("text", x = 15, y = 3, label = "# of Tweets Collected", size = 4) +
annotate("text", x = 15, y = 11, label = "# of Tweets Requested", size = 4) +
annotate("segment", x = 12, xend = 12, y = 0, yend = 20,
linetype = "dashed") +
annotate("text", x = 12, y = 21, label = "Rate limiting", size = 4) +
annotate("segment", x = 9, xend = 9, y = 0, yend = 15,
linetype = "dashed") +
annotate("text", x = 9, y = 16, label = "Throttling", size = 4) +
theme_classic()
app_name<-"CelebrityFollowers"
consumer_key<-"ahysWSWqljNFNU1SVIkJSIik0"
consumer_secret<-"Uy4VQpp4nSYYjoCiZQVA4VXoH7aPEiDFBHeOSYQJPUXMneTLK1"
access_token<-"964635660-t5OnuLQJNRBnYpUDLCDrpw5awOfuTJGVUUyi5fjm"
access_token_secret<-"VShVZwbEWCtf4PJm9GUozDs62GY5R4jfgsYKNk5GSz4WN"
library(rtweet)
create_token(app=app_name, consumer_key=consumer_key, consumer_secret=consumer_secret)
app_name<-"Text Miner 2"
consumer_key<-"CK8T7Jvkv5ub8ol6sJNIkotII"
consumer_secret<-"5Ir8fev2e470OlUUeMoxmEjelkv387PIPG7zSIKDH7cIdZ7Q0x"
access_token<-"912314194527162369-EwboRJYziCzToYiSLz8PXxz5JK6Q4X1"
access_token_secret<-"TMFMVGMM4etliKjhCuDgCdQB992NAMX1H0Rq6J9Wl2UBr"
library(rtweet)
create_token(app=app_name,
consumer_key=consumer_key,
consumer_secret=consumer_secret,
access_token=access_token,
access_secret=access_token_secret)
test<-search_tweets("coronavirus", n=20000)
covid_19_tweets<-search_tweets("coronavirus", n=4000)
View(covid_19_tweets)
names(covid_19_tweets)
head(covid_19_tweets$text)
ts_plot(covid_19_tweets, "3 hours") +
ggplot2::theme_minimal() +
ggplot2::theme(plot.title = ggplot2::element_text(face = "bold")) +
ggplot2::labs(
x = NULL, y = NULL,
title = "Frequency of Tweets about Korea from the Past Day",
subtitle = "Twitter status (tweet) counts aggregated using three-hour intervals",
caption = "\nSource: Data collected from Twitter's REST API via rtweet"
)
ts_plot(covid_19_tweets, "2 hours") +
ggplot2::theme_minimal() +
ggplot2::theme(plot.title = ggplot2::element_text(face = "bold")) +
ggplot2::labs(
x = NULL, y = NULL,
title = "Frequency of Tweets about Korea from the Past Day",
subtitle = "Twitter status (tweet) counts aggregated using three-hour intervals",
caption = "\nSource: Data collected from Twitter's REST API via rtweet"
)
ts_plot(covid_19_tweets, "1 hours") +
ggplot2::theme_minimal() +
ggplot2::theme(plot.title = ggplot2::element_text(face = "bold")) +
ggplot2::labs(
x = NULL, y = NULL,
title = "Frequency of Tweets about Korea from the Past Day",
subtitle = "Twitter status (tweet) counts aggregated using three-hour intervals",
caption = "\nSource: Data collected from Twitter's REST API via rtweet"
)
ts_plot(covid_19_tweets, "6 hours") +
ggplot2::theme_minimal() +
ggplot2::theme(plot.title = ggplot2::element_text(face = "bold")) +
ggplot2::labs(
x = NULL, y = NULL,
title = "Frequency of Tweets about Korea from the Past Day",
subtitle = "Twitter status (tweet) counts aggregated using three-hour intervals",
caption = "\nSource: Data collected from Twitter's REST API via rtweet"
)
View(covid_19_tweets)
ts_plot(covid_19_tweets, "15 secs") +
ggplot2::theme_minimal() +
ggplot2::theme(plot.title = ggplot2::element_text(face = "bold")) +
ggplot2::labs(
x = NULL, y = NULL,
title = "Frequency of Tweets about Korea from the Past Day",
subtitle = "Twitter status (tweet) counts aggregated using three-hour intervals",
caption = "\nSource: Data collected from Twitter's REST API via rtweet"
)
ts_plot(covid_19_tweets, "60 minutes") +
ggplot2::theme_minimal() +
ggplot2::theme(plot.title = ggplot2::element_text(face = "bold")) +
ggplot2::labs(
x = NULL, y = NULL,
title = "Frequency of Tweets about Korea from the Past Day",
subtitle = "Twitter status (tweet) counts aggregated using three-hour intervals",
caption = "\nSource: Data collected from Twitter's REST API via rtweet"
)
ts_plot(covid_19_tweets, "60 min") +
ggplot2::theme_minimal() +
ggplot2::theme(plot.title = ggplot2::element_text(face = "bold")) +
ggplot2::labs(
x = NULL, y = NULL,
title = "Frequency of Tweets about Korea from the Past Day",
subtitle = "Twitter status (tweet) counts aggregated using three-hour intervals",
caption = "\nSource: Data collected from Twitter's REST API via rtweet"
)
ts_plot(covid_19_tweets, "60 mins") +
ggplot2::theme_minimal() +
ggplot2::theme(plot.title = ggplot2::element_text(face = "bold")) +
ggplot2::labs(
x = NULL, y = NULL,
title = "Frequency of Tweets about Korea from the Past Day",
subtitle = "Twitter status (tweet) counts aggregated using three-hour intervals",
caption = "\nSource: Data collected from Twitter's REST API via rtweet"
)
ts_plot(covid_19_tweets, "1 mins") +
ggplot2::theme_minimal() +
ggplot2::theme(plot.title = ggplot2::element_text(face = "bold")) +
ggplot2::labs(
x = NULL, y = NULL,
title = "Frequency of Tweets about Korea from the Past Day",
subtitle = "Twitter status (tweet) counts aggregated using three-hour intervals",
caption = "\nSource: Data collected from Twitter's REST API via rtweet"
)
ts_plot(covid_19_tweets, "mins") +
ggplot2::theme_minimal() +
ggplot2::theme(plot.title = ggplot2::element_text(face = "bold")) +
ggplot2::labs(
x = NULL, y = NULL,
title = "Frequency of Tweets about Korea from the Past Day",
subtitle = "Twitter status (tweet) counts aggregated using three-hour intervals",
caption = "\nSource: Data collected from Twitter's REST API via rtweet"
)
ts_plot(covid_19_tweets, "secs") +
ggplot2::theme_minimal() +
ggplot2::theme(plot.title = ggplot2::element_text(face = "bold")) +
ggplot2::labs(
x = NULL, y = NULL,
title = "Frequency of Tweets about Korea from the Past Day",
subtitle = "Twitter status (tweet) counts aggregated using three-hour intervals",
caption = "\nSource: Data collected from Twitter's REST API via rtweet"
)
ts_plot(covid_19_tweets, "secs") +
ggplot2::theme_minimal() +
ggplot2::theme(plot.title = ggplot2::element_text(face = "bold")) +
ggplot2::labs(
x = NULL, y = NULL,
title = "Frequency of Tweets about Covid-19 1pm May 3, 2020",
subtitle = "Tweet counts aggregated by second",
caption = "\nSource: Data collected from Twitter's REST API via rtweet"
)
library(rtweet)
```{r}
ts_plot(covid_19_tweets, "secs") +
ggplot2::theme_minimal() +
ggplot2::theme(plot.title = ggplot2::element_text(face = "bold")) +
ggplot2::labs(
x = NULL, y = NULL,
title = "Frequency of Tweets about Covid-19 Around 1pm, May 3, 2020",
subtitle = "Tweet counts aggregated by second",
caption = "\nSource: Data collected from Twitter's REST API via rtweet"
)
covid_geo_tweets <- search_tweets("coronavirus",
"lang:en", geocode = lookup_coords("usa"),
n = 1000, type="recent", include_rts=FALSE
)
geocoded <- lat_lng(covid_geo_tweets)
par(mar = c(0, 0, 0, 0))
maps::map("state", lwd = .25)
with(geocoded, points(lng, lat, pch = 20, cex = .75, col = rgb(0, .3, .7, .75)))
covid_geo_tweets <- search_tweets("coronavirus",
"lang:en", geocode = lookup_coords("usa"),
n = 3000, type="recent", include_rts=FALSE
)
geocoded <- lat_lng(covid_geo_tweets)
par(mar = c(0, 0, 0, 0))
maps::map("state", lwd = .25)
with(geocoded, points(lng, lat, pch = 20, cex = .75, col = rgb(0, .3, .7, .75)))
maps::map("world", lwd = .25)
with(geocoded, points(lng, lat, pch = 20, cex = .75, col = rgb(0, .3, .7, .75)))
par(mar = c(0, 0, 0, 0))
maps::map("north america", lwd = .25)
par(mar = c(0, 0, 0, 0))
maps::map("world", lwd = .25)
with(geocoded, points(lng, lat, pch = 20, cex = .75, col = rgb(0, .3, .7, .75)))
with(geocoded, points(lng, lat, pch = 20, cex = .50, col = rgb(0, .3, .7, .75)))
par(mar = c(0, 0, 0, 0))
maps::map("world", lwd = .25)
with(geocoded, points(lng, lat, pch = 20, cex = .50, col = rgb(0, .3, .7, .75)))
trump_tweets <- get_timelines(c("realDonaldTrump
"), n = 5)
head(trump_tweets$text)
obama_twitter_profile <- lookup_users("BarackObama")
obama_twitter_profile$description
rate_limits<-rate_limit()
head(rate_limits[,1:4])
head(rate_limits[,30:35])
head(rate_limits[,1:4])
head(rate_limits[10:15,1:4])
View(rate_limits)
rate_limits<-rate_limit()
head(rate_limits[50:55,1:4])
library(gtrends)
install.packages('gtrends')
library(gtrendsR)
install.packages('gtrendsR')
gtrends(keyword = "new normal")
library(gtrendsR)
gtrends(keyword = "new normal")
library(gtrendsR)
out<-gtrends(keyword = "new normal")
View(out)
plot(out)
plot(out)+
theme_classic()
out<-gtrends(keyword = "new normal", geo="US")
plot(out)+
theme_classic()
plot(out)+
theme_classic()+
theme(legend. title = element_blank())
plot(out)+
theme_classic()+
guides(fill=FALSE)
plot(out)+
theme_classic()+
ggtitle ("Google Searches for New Normal")
plot(out)+
theme_classic()+
ggtitle ("Daily Volumer of Google Searches for `New Normal`")
plot(out)+
theme_classic()+
ggtitle ("Daily Volume of Google Searches for `New Normal`")
plot(out)+
theme_classic()+
ggtitle ("Daily Volume of Google Searches for 'New Normal'")
plot(out)+
theme_classic()+
ggtitle ("Daily Volume of Google Searches for 'New Normal'")+
theme(plot. title = element_text(hjust = 0.5))
plot(out)+
theme_classic()+
ggtitle ("Daily Volume of Google Searches for 'New Normal'")+
theme(plot.title = element_text(hjust = 0.5))
plot(out)+
theme_classic()+
ggtitle ("Daily Volume of Google Searches for 'New Normal'")+
theme(plot.title = element_text(hjust = 0.5))+
theme(legend.position = "none")
plot(out)+
theme_classic()+
ggtitle ("Daily Volume of Google Searches for 'New Normal'")+
theme(plot.title = element_text(hjust = 0.5))+
theme(legend.position = "none") +
theme(plot.title = element_text(face = "bold"))
plot(out)+
theme_classic()+
ggtitle ("Daily Volume of Google Searches for 'New Normal'")+
theme(plot.title = element_text(hjust = 0.5))+
theme(legend.position = "none") +
theme(plot.title = element_text(face = "bold"))+
ylab("Search Volume")
library(rvest)
wikipedia_page<-
read_html("https://en.wikipedia.org/wiki/World_Health_Organization_ranking_of_health_systems_in_2000")
wikipedia_page
section_of_wikipedia<-html_node(wikipedia_page,
xpath='//*[@id="mw-content-text"]/div/table[2]')
head(section_of_wikipedia)
section_of_wikipedia
health_rankings<-html_table(section_of_wikipedia)
e
section_of_wikipedia<-html_node(wikipedia_page,
xpath='//*[@id="mw-content-text"]/div/table')
head(section_of_wikipedia)
health_rankings<-html_table(section_of_wikipedia)
head(health_rankings[,(1:2)])
section_of_wikipedia<-html_node(wikipedia_page,
xpath='//*[@id="mw-content-text"]/div/table[2]')
head(section_of_wikipedia)
section_of_wikipedia<-html_node(wikipedia_page,
xpath='//*[@id="mw-content-text"]/div/table')
head(section_of_wikipedia)
health_rankings<-html_table(section_of_wikipedia)
head(health_rankings[,(1:2)])
duke_page<-read_html("https://www.duke.edu")
duke_events<-html_nodes(duke_page, css="li:nth-child(1) .epsilon")
html_text(duke_events)
